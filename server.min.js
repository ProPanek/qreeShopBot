/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./server.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./db/db_qree.js":
/*!***********************!*\
  !*** ./db/db_qree.js ***!
  \***********************/
/*! exports provided: createQree, editUserJira, findGame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createQree", function() { return createQree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "editUserJira", function() { return editUserJira; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findGame", function() { return findGame; });
/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ "pg");
/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_0__);
__webpack_require__(/*! dotenv */ "dotenv").config()


async function createQree(qrData, qrLink, name,console, region, size, uploader_discord_id) {
  const client = new pg__WEBPACK_IMPORTED_MODULE_0__["Client"]({
    connectionString: process.env.DATABASE_URL
  })
  try {
    await client.connect();
    await client.query(`INSERT INTO qre_items(qr_data, qr_link, name, console, region, size, uploader_discord_id) VALUES('${qrData}', '${qrLink}', '${name}' , '${console}', '${region}', '${size}', '${uploader_discord_id}')`);
    await client.end();
    console.log('DB -> save qr in DB')
  } catch (e) {
    console.log(e)
  }
}

async function editUserJira (
  jiraLogin,
  jiraPassword,
  jiraSubdomain,
  userId
) {
  const client = new pg__WEBPACK_IMPORTED_MODULE_0__["Client"]({
    connectionString: process.env.DATABASE_URL
  })
  await client.connect()
  try {
    await client.query(
      `UPDATE users SET jira_email = '${jiraLogin}', jira_api_key = '${jiraPassword}', jira_subdomain = '${[
        jiraSubdomain
      ]}'  WHERE user_id = '${userId}'`
    )
    console.log('DB -> save jira credentials in DB')
    await client.end()
  } catch (e) {
    console.log(e)
  }
}

async function findGame(name) {
  const client = new pg__WEBPACK_IMPORTED_MODULE_0__["Client"]({
    connectionString: process.env.DATABASE_URL
  })
  try {
    await client.connect()
    const res = await client.query(
      `SELECT * FROM qre_items WHERE name LIKE '%${name}%';`
    )
    console.log('DB -> game found in DB')
    await client.end()
    return res
  } catch (e) {
    console.log(e)
  }
}


/***/ }),

/***/ "./helpers/helpers.js":
/*!****************************!*\
  !*** ./helpers/helpers.js ***!
  \****************************/
/*! exports provided: parseDropboxLink, parseGDriveLink, createASCIIQrCode, regexes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseDropboxLink", function() { return parseDropboxLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseGDriveLink", function() { return parseGDriveLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createASCIIQrCode", function() { return createASCIIQrCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regexes", function() { return regexes; });
/* harmony import */ var qrcode_generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qrcode-generator */ "qrcode-generator");
/* harmony import */ var qrcode_generator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qrcode_generator__WEBPACK_IMPORTED_MODULE_0__);


function parseDropboxLink(link){
  let string = link;
  string = string.split("/");
  string[5] = '?dl=1';
  string = string.join("/")
  return string
}

function parseGDriveLink(link){
  return link.replace(/\/file\/d\/(.+)\/(.+)/, "/uc?export=download&id=$1");
}

function createASCIIQrCode(link){
  let qr = qrcode_generator__WEBPACK_IMPORTED_MODULE_0___default()(0, 'M');
  qr.addData(`${link}`);
  qr.make();
  return qr.createASCII()
}

const regexes = {
  DROPBOX: /\b(\w*dropbox\w*)\b/g,
  GDRIVE: /\b(\w*drive.google.com\w*)\b/g,
  URL: /(http|ftp|https):\/\/([\w_-]+(?:(?:\.[\w_-]+)+))([\w.,@?^=%&:/~+#-]*[\w@?^=%&/~+#-])?/g,
  ARGUMENTS: /(http|ftp|https):\/\/([\w_-]+(?:(?:\.[\w_-]+)+))([\w.,@?^=%&:/~+#-]*[\w@?^=%&/~+#-])?|\w+|"(?:\\"|[^"])+"|\'(?:\\'|[^'])+'|\S+/g
}
//(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?\w+|"(?:\\"|[^"])+"|'(?:\\'|[^"])+'|\w+


/***/ }),

/***/ "./models/database.js":
/*!****************************!*\
  !*** ./models/database.js ***!
  \****************************/
/*! exports provided: initializeDb */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initializeDb", function() { return initializeDb; });
/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ "pg");
/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_0__);
__webpack_require__(/*! dotenv */ "dotenv").config()




async function initializeDb() {
	try {
		const client = await new pg__WEBPACK_IMPORTED_MODULE_0__["Client"]({
			connectionString: process.env.DATABASE_URL
		})
		await client.connect()
		await client.query(
			"CREATE TABLE IF NOT EXISTS qre_items(id SERIAL PRIMARY KEY, " +
			"qr_data text not null, " +
			"qr_link varchar not null, " +
			"name varchar not null, " +
			"console varchar not null, " +
			"region varchar not null," +
			"size varchar not null," +
			"uploader_discord_id varchar not null" +
			")"
		)

		client.end()
	} catch (e) {
		console.log(e)
	}
}


/***/ }),

/***/ "./server.js":
/*!*******************!*\
  !*** ./server.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var discord_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! discord.js */ "discord.js");
/* harmony import */ var discord_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(discord_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/helpers */ "./helpers/helpers.js");
/* harmony import */ var _models_database__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models/database */ "./models/database.js");
/* harmony import */ var _db_db_qree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./db/db_qree */ "./db/db_qree.js");
__webpack_require__(/*! dotenv */ "dotenv").config()






void (async function () {
  try {
    await Object(_models_database__WEBPACK_IMPORTED_MODULE_2__["initializeDb"])()
    console.log("DB -> init DB")
  }
  catch (e) {
    console.log(e)
  }

  try {
    await client.login(process.env.BOT_TOKEN)
  } catch (e) {
    console.log(e)
  }

})()

const client = new discord_js__WEBPACK_IMPORTED_MODULE_0___default.a.Client()
let botInvoker = process.env.BOT_DEFAULT_INVOKE
let serverInvokers = new Map()

client.on('ready', () => {
  console.log('On Discord!');

  console.log("Connected as " + client.user.tag)
  console.log("Servers:")
  client.guilds.forEach((guild) => {
    serverInvokers.set(guild.id, botInvoker)
    console.log(" - " + guild.id)
    guild.channels.forEach((channel) => {
      console.log(` -- ${channel.name} (${channel.type}) - ${channel.id}`)
    })

    console.log(serverInvokers)
  })
})

client.on('message', (receivedMessage) => {
  console.log(receivedMessage.guild.id)
  if (receivedMessage.author === client.user) { // Prevent bot from responding to its own messages
    return
  }

  if (receivedMessage.content.startsWith(`${serverInvokers.get(receivedMessage.guild.id)}`)) {
    processCommand(receivedMessage)
  }
})

function processCommand(receivedMessage) {
  let fullCommand = receivedMessage.content.substr(serverInvokers.get(receivedMessage.guild.id).length + 1)
  let messageArguments = fullCommand.match(_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__["regexes"].ARGUMENTS)
  let primaryCommand
  if (messageArguments !== null && messageArguments.length) {
    primaryCommand = messageArguments[0] // The first word directly after the exclamation is the command
  }

  if(primaryCommand === "" || primaryCommand === null || primaryCommand === undefined){
    return receivedMessage.channel.send(
      `You need to specify which command you want to use type "${serverInvokers.get(receivedMessage.guild.id)} help" to display available commands`
    )
  }

  if(primaryCommand === "help"){
    return receivedMessage.channel.send(
      "```qreeShopBot Help page\n\n" +
      "NOTE: \n" +
      "links - you can provide direct link or normal sharing links from google and dropbox it will be automatically converted into direct ones\n\n" +
      "COMMANDS: \n\n" +
      "upload - "+ serverInvokers.get(receivedMessage.guild.id) +" upload <url> \"<name>\" <region> <console> <size> \n" +
      "example: !qre upload https://files.catbox.moe/au9pkx.cia \"Super Castlevania IV\" USA GBA 5MB \n\n" +
      "search - \n" +
      "invoke - \n```"
    )
  }

  if(primaryCommand === "upload"){
    return handleGameUpload(messageArguments, receivedMessage)
  }

  if(primaryCommand === "invoke"){
    return changeInvokeCommand(messageArguments, receivedMessage)
  }

  if(primaryCommand === "search"){
    return searchGame(messageArguments, receivedMessage)
  }

}

function changeInvokeCommand(messageArguments, receivedMessage) {
  if (messageArguments.length > 3){
    return  receivedMessage.channel.send(
      `Too much arguments for invoke command`
    )
  }

  if (messageArguments[1]) {
    serverInvokers.set(receivedMessage.guild.id, messageArguments[1])
    return  receivedMessage.channel.send(
      `Successfully changed your invoke command`
    )
  }

}

async function handleGameUpload(messageArguments, receivedMessage){
  let link

  if (messageArguments.length < 6){
    return  receivedMessage.channel.send(
        `invalid arguments for upload command`
    )
  }

  if (messageArguments[1].match(_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__["regexes"].GDRIVE)){
    link = Object(_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__["parseGDriveLink"])(messageArguments[1])
  } else if (messageArguments[1].match(_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__["regexes"].DROPBOX)) {
    messageArguments[1].slice(-1) === "0" ? link = Object(_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__["parseDropboxLink"])(messageArguments[1]) : link = messageArguments[1]
  } else {
    link = messageArguments[1]
  }


  if (link.match(_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__["regexes"].URL)){
    const qr = Object(_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__["createASCIIQrCode"])(link)

    receivedMessage.channel.send(
      "```"+ qr +
      "\nLink: "+ link +
      "\n\nName: "+  messageArguments[2] +
      "\nRegion: "+ messageArguments[3] +
      "\nConsole: "+ messageArguments[4] +
      "\nSize: "+  messageArguments[5] +
      "```"
    );

    try {
      await Object(_db_db_qree__WEBPACK_IMPORTED_MODULE_3__["createQree"])(qr, link, messageArguments[2], messageArguments[3], messageArguments[4], messageArguments[5], receivedMessage.author.id)
    } catch (e) {
      console.log(e)
      receivedMessage.channel.send(
        "something went wrong, send it to developer: \n" +
        "```diff\n- " + e + "```"
      );
    }

  } else {
    return  receivedMessage.channel.send(
      `specify a valid url`
    )
  }
}

async function searchGame(messageArguments, receivedMessage){
  try {
    // const games = await findGame(messageArguments[1])
    const {rows} = await Object(_db_db_qree__WEBPACK_IMPORTED_MODULE_3__["findGame"])(messageArguments[1])
    rows.map(({qr_data, qr_link, name, region, console , size}) => {
      console.log(qr_data)
      receivedMessage.channel.send(
        "```"+ qr_data +
        "\nLink: "+ qr_link +
        "\n\nName: "+  name +
        "\nRegion: "+ region +
        "\nConsole: "+ console +
        "\nSize: "+ size +
        "```"
      );
    })

    // console.log(games.fields.forEach(field => {
    //   console.log(field)
    // }))
  } catch (e) {
    console.log(e)
    receivedMessage.channel.send(
      "something went wrong, send it to developer: \n" +
      "```diff\n- " + e + "```"
    );
  }
}


/***/ }),

/***/ "discord.js":
/*!*****************************!*\
  !*** external "discord.js" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("discord.js");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("dotenv");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("pg");

/***/ }),

/***/ "qrcode-generator":
/*!***********************************!*\
  !*** external "qrcode-generator" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("qrcode-generator");

/***/ })

/******/ });